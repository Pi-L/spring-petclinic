name: GitHub Actions CI
on:
  workflow_dispatch:
  push:
jobs:
  set_variables:
    runs-on: ubuntu-latest
    outputs:
      build_name: ${{ steps.setbuildname.outputs.build_name }}
    steps:
      - uses: actions/checkout@v2
      - name: Create Env Variables
        run: |
          echo "SHORT_SHA=`git rev-parse --short=8 HEAD`" >> $GITHUB_ENV
          echo "SHORT_BRANCH_NAME=`echo ${GITHUB_REF##*/}`" >> $GITHUB_ENV
      - id: setbuildname
        run: echo "::set-output name=build_name::build_${SHORT_BRANCH_NAME}_${SHORT_SHA}"

  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: maven
      - name: cache with maven
        run: mvn dependency:go-offline

  test:
    needs: cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: maven
      - name: test with Maven
        run: mvn test

  build:
    needs: [cache, set_variables]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: maven

      - name: Build with Maven
        run: mvn clean install -DskipTests
      - name: check JAR exist
        run: test -f ./target/spring-petclinic*.jar

      - uses: actions/upload-artifact@v2
        with:
          name: petjar
          path: ./target/spring-petclinic-2.5.0-SNAPSHOT.jar

  save_on_artifactory:
    needs: [build, test, set_variables]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: get jar file cache
        uses: actions/download-artifact@v2
        with:
          name: petjar

      - uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JFROG_TOKEN }}

      - run: jfrog rt u spring-petclinic-2.5.0-SNAPSHOT.jar "pet-klinik/${{ needs.set_variables.outputs.build_name }}.jar"
